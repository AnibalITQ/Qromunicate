{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DenunciasScreen = function DenunciasScreen(_ref) {\n  var navigation = _ref.navigation;\n  var denuncias = [{\n    tipo: 'Penales',\n    descripcion: 'Relacionadas con actividades delictivas. Pueden incluir delitos como robo, fraude, agresión, etc.',\n    background: require(\"../images/penal.png\")\n  }, {\n    tipo: 'Civiles',\n    descripcion: 'Se presentan en casos de disputas entre individuos, como casos de negligencia, disputas contractuales, daños y perjuicios, entre otros.',\n    background: require(\"../images/civil.png\")\n  }, {\n    tipo: 'Laborales',\n    descripcion: 'Relativas a cuestiones en el lugar de trabajo, como acoso laboral, discriminación, violaciones de derechos laborales, etc.',\n    background: require(\"../images/Laboral.png\")\n  }, {\n    tipo: 'Orden publico',\n    descripcion: 'Relativas a cuestiones que disturbien el orden y tranquilidad del ciudadano en publico',\n    background: require(\"../images/ordenpublico.png\")\n  }, {\n    tipo: 'Medioambientales',\n    descripcion: 'Relativas a actividades que dañan el medio ambiente, como vertidos contaminantes, deforestación ilegal, etc.',\n    background: require(\"../images/medioambiental.png\")\n  }, {\n    tipo: 'Corrupción',\n    descripcion: 'Relativas a actividades que dañan el medio ambiente, como vertidos contaminantes, deforestación ilegal, etc.',\n    background: require(\"../images/corrupcion.png\")\n  }];\n  return _jsx(View, {\n    style: styles.container,\n    children: denuncias.map(function (denuncia, index) {\n      return _jsxs(TouchableOpacity, {\n        style: styles.denunciaButton,\n        onPress: function onPress() {\n          return navigation.navigate('DenunciaDetail', {\n            tipo: denuncia.tipo,\n            descripcion: denuncia.descripcion\n          });\n        },\n        children: [_jsx(ImageBackground, {\n          source: denuncia.background,\n          style: styles.buttonBackground,\n          resizeMode: \"cover\"\n        }), _jsx(View, {\n          style: styles.textContainer,\n          children: _jsx(Text, {\n            style: styles.denunciaButtonText,\n            children: denuncia.tipo\n          })\n        })]\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 10,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  denunciaButton: {\n    width: '45%',\n    aspectRatio: 1,\n    margin: '2.5%',\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  buttonBackground: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textContainer: {\n    position: 'absolute',\n    bottom: -10,\n    width: '100%'\n  },\n  denunciaButtonText: {\n    color: '#004AAD',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 10\n  }\n});\nexport default DenunciasScreen;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","ImageBackground","jsx","_jsx","jsxs","_jsxs","DenunciasScreen","_ref","navigation","denuncias","tipo","descripcion","background","require","style","styles","container","children","map","denuncia","index","denunciaButton","onPress","navigate","source","buttonBackground","resizeMode","textContainer","denunciaButtonText","create","flex","justifyContent","alignItems","padding","flexDirection","flexWrap","width","aspectRatio","margin","borderRadius","overflow","height","position","bottom","color","fontSize","fontWeight","textAlign"],"sources":["C:/Users/Halo5/Qromunicate/src/pages/DenunciasScreen.jsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, ImageBackground } from 'react-native';\r\n\r\nconst DenunciasScreen = ({ navigation }) => {\r\n    const denuncias = [\r\n        {\r\n            tipo: 'Penales',\r\n            descripcion: 'Relacionadas con actividades delictivas. Pueden incluir delitos como robo, fraude, agresión, etc.',\r\n            background: require('../images/penal.png'), // Ruta a la imagen de fondo\r\n        },\r\n        {\r\n            tipo: 'Civiles',\r\n            descripcion: 'Se presentan en casos de disputas entre individuos, como casos de negligencia, disputas contractuales, daños y perjuicios, entre otros.',\r\n            background: require('../images/civil.png'), // Ruta a la imagen de fondo\r\n        },\r\n        {\r\n            tipo: 'Laborales',\r\n            descripcion: 'Relativas a cuestiones en el lugar de trabajo, como acoso laboral, discriminación, violaciones de derechos laborales, etc.',\r\n            background: require('../images/Laboral.png'), // Ruta a la imagen de fondo\r\n        },\r\n\r\n        {\r\n            tipo:\r\n                'Orden publico',\r\n            descripcion: 'Relativas a cuestiones que disturbien el orden y tranquilidad del ciudadano en publico',\r\n            background: require('../images/ordenpublico.png'), // Ruta a la imagen de fondo\r\n        },\r\n        {\r\n            tipo:\r\n                'Medioambientales',\r\n            descripcion: 'Relativas a actividades que dañan el medio ambiente, como vertidos contaminantes, deforestación ilegal, etc.',\r\n            background: require('../images/medioambiental.png'),\r\n        },\r\n        {\r\n            tipo: 'Corrupción',\r\n            descripcion: 'Relativas a actividades que dañan el medio ambiente, como vertidos contaminantes, deforestación ilegal, etc.',\r\n            background: require('../images/corrupcion.png'),\r\n        }\r\n\r\n    ];\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        {denuncias.map((denuncia, index) => (\r\n            <TouchableOpacity\r\n                key={index}\r\n                style={styles.denunciaButton}\r\n                onPress={() =>\r\n                    navigation.navigate('DenunciaDetail', {\r\n                        tipo: denuncia.tipo,\r\n                        descripcion: denuncia.descripcion,\r\n                    })\r\n                }\r\n            >\r\n                <ImageBackground\r\n                    source={denuncia.background}\r\n                    style={styles.buttonBackground}\r\n                    resizeMode=\"cover\"\r\n                >\r\n                    {/* No hay contenido aquí, solo la imagen de fondo */}\r\n                </ImageBackground>\r\n                {/* Contenedor del texto colocado fuera de ImageBackground */}\r\n                <View style={styles.textContainer}>\r\n                    <Text style={styles.denunciaButtonText}>{denuncia.tipo}</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        ))}\r\n    </View>\r\n);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1, // Toma todo el espacio disponible\r\n        justifyContent: 'flex-start', // Alinea los botones al inicio del contenedor\r\n        alignItems: 'center', // Centra los botones horizontalmente\r\n        padding: 10, // Agrega espacio alrededor de los botones\r\n        flexDirection: 'row', // Coloca los botones en una fila horizontal\r\n        flexWrap: 'wrap', // Permite que los botones se envuelvan en la siguiente línea si no caben\r\n    },\r\n    denunciaButton: {\r\n        width: '45%', // Ocupa el 45% del ancho del contenedor\r\n        aspectRatio: 1, // Mantiene la proporción de aspecto\r\n        margin: '2.5%', // Espacio alrededor del botón\r\n        borderRadius: 10, // Bordes redondeados\r\n        overflow: 'hidden', // Esconde cualquier cosa que se desborde del borde redondeado\r\n        // No necesitas borderWidth ni borderColor aquí a menos que desees un borde\r\n    },\r\n    buttonBackground: {\r\n        width: '100%', // Asegura que la imagen de fondo cubra el botón\r\n        height: '100%', // Establece la altura aquí para controlar el tamaño de la imagen\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    textContainer: {\r\n        position: 'absolute', // Posiciona absolutamente para que el texto vaya encima de la imagen\r\n        bottom: -10, // Alinea el texto en la parte inferior del botón\r\n        width: '100%', // Asegura que el contenedor del texto cubra el ancho del botón\r\n    },\r\n    denunciaButtonText: {\r\n        color: '#004AAD',\r\n        fontSize: 16, // Ajusta según sea necesario\r\n        fontWeight: 'bold',\r\n        textAlign: 'center', // Alinea el texto en el centro\r\n        padding: 10, // Espacio alrededor del texto\r\n    },\r\n});\r\n\r\n\r\nexport default DenunciasScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}