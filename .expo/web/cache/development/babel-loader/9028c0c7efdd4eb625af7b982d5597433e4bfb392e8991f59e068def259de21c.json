{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReporteScreen = function ReporteScreen(_ref) {\n  var navigation = _ref.navigation;\n  var reportes = [{\n    tipo: 'Movilidad',\n    descripcion: 'Reporta fallas en la movilidad del tráfico y su posible causa (Accidente vial, bloqueos, Fallas estructurales, etc.)',\n    background: require(\"../images/movilidad.png\")\n  }, {\n    tipo: 'Servicios publicos',\n    descripcion: 'Reporta fallas en cualquier servicio publico (Agua, luz, drenaje, limpieza)',\n    background: require(\"../images/servicios.png\")\n  }, {\n    tipo: 'Accesibilidad',\n    descripcion: 'Reporta fallas de accesibilidad para personas con necesidades especiales)',\n    background: require(\"../images/discapacidad.png\")\n  }];\n  return _jsx(View, {\n    style: styles.container,\n    children: reportes.map(function (reporte, index) {\n      return _jsxs(TouchableOpacity, {\n        style: styles.reporteButton,\n        onPress: function onPress() {\n          return navigation.navigate('ReporteDetail', {\n            tipo: reporte.tipo,\n            descripcion: reporte.descripcion\n          });\n        },\n        children: [_jsx(ImageBackground, {\n          source: reporte.background,\n          style: styles.buttonBackground,\n          resizeMode: \"cover\"\n        }), _jsx(View, {\n          style: styles.textContainer,\n          children: _jsx(Text, {\n            style: styles.reporteButtonText,\n            children: reporte.tipo\n          })\n        })]\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 10,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  reporteButton: {\n    width: '45%',\n    aspectRatio: 1,\n    margin: '2.5%',\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  buttonBackground: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textContainer: {\n    position: 'absolute',\n    bottom: -10,\n    width: '100%'\n  },\n  reporteButtonText: {\n    color: '#004AAD',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 10\n  }\n});\nexport default ReporteScreen;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","ImageBackground","jsx","_jsx","jsxs","_jsxs","ReporteScreen","_ref","navigation","reportes","tipo","descripcion","background","require","style","styles","container","children","map","reporte","index","reporteButton","onPress","navigate","source","buttonBackground","resizeMode","textContainer","reporteButtonText","create","flex","justifyContent","alignItems","padding","flexDirection","flexWrap","width","aspectRatio","margin","borderRadius","overflow","height","position","bottom","color","fontSize","fontWeight","textAlign"],"sources":["C:/Users/ANIBAL/hackathons/src/pages/ReporteScreen.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet, ImageBackground } from 'react-native';\r\nconst ReporteScreen = ({navigation}) => {\r\n    const reportes = [\r\n        {\r\n          tipo: 'Movilidad',\r\n          descripcion: 'Reporta fallas en la movilidad del tráfico y su posible causa (Accidente vial, bloqueos, Fallas estructurales, etc.)',\r\n          background: require('../images/movilidad.png')  \r\n        },\r\n         {\r\n          tipo: 'Servicios publicos',\r\n          descripcion: 'Reporta fallas en cualquier servicio publico (Agua, luz, drenaje, limpieza)',\r\n         background: require ('../images/servicios.png')\r\n        },\r\n         {\r\n          tipo: 'Accesibilidad',\r\n          descripcion: 'Reporta fallas de accesibilidad para personas con necesidades especiales)',\r\n          background: require ('../images/discapacidad.png')  \r\n        },\r\n    ];\r\n    return (\r\n        <View style={styles.container}>\r\n        {reportes.map((reporte, index) => (\r\n          <TouchableOpacity \r\n            key={index}\r\n            style={styles.reporteButton}\r\n            onPress={() =>\r\n              navigation.navigate('ReporteDetail', {\r\n                tipo: reporte.tipo,\r\n                descripcion: reporte.descripcion  \r\n              })\r\n            } \r\n          >\r\n            <ImageBackground\r\n              source={reporte.background}\r\n              style={styles.buttonBackground}\r\n              resizeMode=\"cover\"\r\n            >\r\n              {/* Aquí ya no necesitamos una View adicional dentro de ImageBackground */}\r\n            </ImageBackground>\r\n            <View style={styles.textContainer}>\r\n              <Text style={styles.reporteButtonText}>{reporte.tipo}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n);\r\n};\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1, // Toma todo el espacio disponible\r\n        justifyContent: 'flex-start', // Alinea los botones al inicio del contenedor\r\n        alignItems: 'center', // Centra los botones horizontalmente\r\n        padding: 10, // Agrega espacio alrededor de los botones\r\n        flexDirection: 'row', // Coloca los botones en una fila horizontal\r\n        flexWrap: 'wrap', // Permite que los botones se envuelvan en la siguiente línea si no caben\r\n    },\r\n    reporteButton: {\r\n        width: '45%', // Ocupa el 45% del ancho del contenedor\r\n        aspectRatio: 1, // Mantiene la proporción de aspecto\r\n        margin: '2.5%', // Espacio alrededor del botón\r\n        borderRadius: 10, // Bordes redondeados\r\n        overflow: 'hidden', // Esconde cualquier cosa que se desborde del borde redondeado\r\n        // No necesitas borderWidth ni borderColor aquí a menos que desees un borde\r\n    },\r\n\r\n    buttonBackground: {\r\n        width: '100%', // Asegura que la imagen de fondo cubra el botón\r\n        height: '100%', // Establece la altura aquí para controlar el tamaño de la imagen\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    textContainer: {\r\n        position: 'absolute', // Posiciona absolutamente para que el texto vaya encima de la imagen\r\n        bottom: -10, // Alinea el texto en la parte inferior del botón\r\n        width: '100%', // Asegura que el contenedor del texto cubra el ancho del botón\r\n    },\r\n    reporteButtonText: {\r\n        color: '#004AAD',\r\n        fontSize: 16, // Ajusta según sea necesario\r\n        fontWeight: 'bold',\r\n        textAlign: 'center', // Alinea el texto en el centro\r\n        padding: 10, // Espacio alrededor del texto\r\n\r\n    },\r\n});\r\nexport default ReporteScreen;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,eAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,IAAMC,QAAQ,GAAG,CACb;IACEC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,sHAAsH;IACnIC,UAAU,EAAEC,OAAO,0BAA0B;EAC/C,CAAC,EACA;IACCH,IAAI,EAAE,oBAAoB;IAC1BC,WAAW,EAAE,6EAA6E;IAC3FC,UAAU,EAAEC,OAAO,0BAA2B;EAC/C,CAAC,EACA;IACCH,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE,2EAA2E;IACxFC,UAAU,EAAEC,OAAO,6BAA8B;EACnD,CAAC,CACJ;EACD,OACIV,IAAA,CAACN,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC7BR,QAAQ,CAACS,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;MAAA,OAC3Bf,KAAA,CAACN,gBAAgB;QAEfe,KAAK,EAAEC,MAAM,CAACM,aAAc;QAC5BC,OAAO,EAAE,SAAAA,QAAA;UAAA,OACPd,UAAU,CAACe,QAAQ,CAAC,eAAe,EAAE;YACnCb,IAAI,EAAES,OAAO,CAACT,IAAI;YAClBC,WAAW,EAAEQ,OAAO,CAACR;UACvB,CAAC,CAAC;QAAA,CACH;QAAAM,QAAA,GAEDd,IAAA,CAACF,eAAe;UACduB,MAAM,EAAEL,OAAO,CAACP,UAAW;UAC3BE,KAAK,EAAEC,MAAM,CAACU,gBAAiB;UAC/BC,UAAU,EAAC;QAAO,CAGH,CAAC,EAClBvB,IAAA,CAACN,IAAI;UAACiB,KAAK,EAAEC,MAAM,CAACY,aAAc;UAAAV,QAAA,EAChCd,IAAA,CAACL,IAAI;YAACgB,KAAK,EAAEC,MAAM,CAACa,iBAAkB;YAAAX,QAAA,EAAEE,OAAO,CAACT;UAAI,CAAO;QAAC,CACxD,CAAC;MAAA,GAlBFU,KAmBW,CAAC;IAAA,CACpB;EAAC,CACE,CAAC;AAEb,CAAC;AACD,IAAML,MAAM,GAAGf,UAAU,CAAC6B,MAAM,CAAC;EAC7Bb,SAAS,EAAE;IACPc,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE;EACd,CAAC;EACDd,aAAa,EAAE;IACXe,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,CAAC;IACdC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE;EAEd,CAAC;EAEDf,gBAAgB,EAAE;IACdW,KAAK,EAAE,MAAM;IACbK,MAAM,EAAE,MAAM;IACdV,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDL,aAAa,EAAE;IACXe,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC,EAAE;IACXP,KAAK,EAAE;EACX,CAAC;EACDR,iBAAiB,EAAE;IACfgB,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBd,OAAO,EAAE;EAEb;AACJ,CAAC,CAAC;AACF,eAAe3B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}